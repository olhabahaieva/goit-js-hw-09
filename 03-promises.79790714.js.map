{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAsBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvB,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAAgB,IAClBF,EAAI,CAAEH,WAAUC,UAChBQ,EAAAZ,GAASa,OAAOC,QACd,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,SAGhDG,EAAI,CAAEJ,WAAUC,UAChBQ,EAAAZ,GAASa,OAAOG,QACd,sBAAuCD,OAAfZ,EAAS,QAAYY,OAANX,EAAM,O,GAGhDA,E,IAlCMa,SAASC,cAAc,SAG/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,IADA,IAAgCC,EAAAF,EAAMG,OAAOC,SAArCC,EAAwBH,EAAxBlB,MAAasB,GAAWJ,EAAjBK,KAAiBL,EAAXI,QACZE,EAAI,EAAGA,EAAIF,EAAOG,MAAOD,GAAK,EACrC1B,EAAc0B,EAAGH,EAAMI,OACpBC,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjB4B,QAAQC,IAAI,uBAAwClB,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAE3D8B,OAAM,SAAAH,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClB4B,QAAQC,IAAI,sBAAuClB,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,OAyBjEF,EAAc,EAAG,MACd4B,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjB4B,QAAQC,IAAI,uBAAwClB,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAE3D8B,OAAM,SAAAH,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClB4B,QAAQC,IAAI,sBAAqClB,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n//Form element\nconst form = document.querySelector('.form');\n\n//Event listener\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.target.elements;\n  for (let i = 0; i < amount.value; i += 1) {\n    createPromise(i, delay.value)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve > 0.3) {\n        res({ position, delay });\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      } else {\n        rej({ position, delay });\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      }\n    }, delay);\n  });\n}\n\n//Testing promise\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","concat","failure","document","querySelector","addEventListener","event","preventDefault","_elements","target","elements","delay1","amount","step","i","value","then","param","console","log","catch"],"version":3,"file":"03-promises.79790714.js.map"}