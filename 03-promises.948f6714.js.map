{"mappings":"AACA,MAAMA,EAAOC,SAASC,iBAAiB,SASjCC,GANkBF,SAASG,cAAc,qBAGxBH,SAASG,cAAc,oBAG1BH,SAASG,cAAc,uBAqC3C,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EAAgB,GAClBF,EAAI,uBAAqBH,QAAiBC,OAExCG,EAAE,sBAAoBJ,QAAiBC,MAAU,GAG9C,IAARA,EAAa,G,CA5CIN,SAASG,cAAc,uBAG/BW,iBAAiB,SAE/B,WACC,MAAMC,EAAW,IAAIhB,GAAMiB,KAAI,CAACC,EAAMC,KACrCD,EAAKE,YAAc,GAEnB,MAAMC,EAAUhB,EAAcc,GAI9B,OAHAE,EACCC,MAAMC,GAAWL,EAAKE,YAAcG,IACpCC,OAAOC,GAASP,EAAKE,YAAcK,IAC7BJ,CAAO,IAGhBb,QAAQkB,WAAWV,GAAUM,MAAMD,IACjC,MAAMM,EAAWN,EAAQO,OAAM,EAACC,OAAEA,KAAwB,aAAXA,IAC9BR,EAAQO,OAAM,EAACC,OAAEA,KAAwB,cAAXA,IAE/Cf,YAAW,KACNa,EACDG,MAAM,YAENA,MAAM,UAAU,GAGjB3B,EAAY,G,IAqBjBE,EAAc,EAAG,MACdiB,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBwB,QAAQC,IAAI,uBAAqB1B,QAAiBC,MAAU,IAE7DiB,OAAM,EAAClB,SAAEA,EAAQC,MAAEA,MAClBwB,QAAQC,IAAI,sBAAoB1B,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["//Form element\nconst form = document.querySelectorAll('.form');\n\n//First delay input\nconst inputFirstDelay = document.querySelector('input[name=delay]');\n\n//Second delay input\nconst inputDelayStep = document.querySelector('input[name=step]');\n\n//Amount input\nconst inputAmount = document.querySelector('input[name=amount]');\n\n//Button element\nconst buttonElement = document.querySelector('button[type=submit]');\n\n//Event listener\nbuttonElement.addEventListener(\"click\", onStart);\n\nfunction onStart(){\n const promises = [...form].map((item, idx)=>{\n  item.textContent = \"\";\n\n  const promise = createPromise(idx);\n  promise\n  .then((value) => (item.textContent = value))\n  .catch((err) => (item.textContent = err));\n  return promise;\n})\n\nPromise.allSettled(promises).then((promise)=>{\n  const isAllRej = promise.every(({ status }) => status === \"rejected\");\n  const isAllRes = promise.every(({ status }) => status === \"fulfilled\");\n\n  setTimeout(()=>{\n    if(isAllRej){\n      alert(\"Rejected\");\n    } else {\n      alert(\"Success\");\n    }\n    \n  }, inputAmount);\n\n})\n}\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej)=>{\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(()=> {\n      if (shouldResolve > 0.3) {\n        res(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        rej(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n   \n  }, delay * 1000);\n})\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$47d4ff9957288465$var$form","document","querySelectorAll","$47d4ff9957288465$var$inputAmount","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","addEventListener","promises","map","item","idx","textContent","promise","then","value","catch","err","allSettled","isAllRej","every","status","alert","console","log"],"version":3,"file":"03-promises.948f6714.js.map"}